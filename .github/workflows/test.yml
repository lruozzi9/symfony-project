name: Tests

on:
    push: ~
    pull_request: ~
    release:
        types: [ created ]
    schedule:
        - cron: "0 6 * * 0"

jobs:
    tests:
        runs-on: ubuntu-latest
        timeout-minutes: 10
        env:
            APP_ENV: test
            DATABASE_URL: postgresql://postgres:postgres@localhost:5432/symfony-project?serverVersion=14&charset=utf8

        services:
            postgres:
                image: postgres:14
                env:
                    POSTGRES_PASSWORD: postgres
                    POSTGRES_USER: postgres
                    POSTGRES_DB: symfony-project
                # Set health checks to wait until postgres has started
                options: >-
                    --health-cmd pg_isready
                    --health-interval 10s
                    --health-timeout 5s
                    --health-retries 5
                ports:
                    - 5432:5432
        steps:
            -
                name: Setup PHP
                uses: shivammathur/setup-php@v2
                with:
                    php-version: '8.0'
                    tools: symfony, composer-require-checker, composer-unused
            -
                name: Setup Node
                uses: actions/setup-node@v1
                with:
                    node-version: "16"
            -
                uses: actions/checkout@v2
            -
                name: Copy .env.test.local
                run: php -r "file_exists('.env.test.local') || copy('.env.test', '.env.test.local');"
            -
                name: Cache Composer packages
                id: composer-cache
                uses: actions/cache@v2
                with:
                    path: vendor
                    key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
                    restore-keys: |
                        ${{ runner.os }}-php-
            -
                name: Install PHP Dependencies
                run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

            -
                name: Install Yarn Dependencies
                run: yarn install
            -
                name: Build Yarn Assets
                run: yarn build
            -
                name: Check composer direct dependencies
                run: composer-require-checker check
            #-
            #    name: Check if dependencies are used
            #    run: composer-unused
            -
                name: Run easy coding standard
                run: vendor/bin/ecs check src tests spec
            -
                name: Analyse code with phpstan
                run: vendor/bin/phpstan analyse src -l max
            -
                name: Analyse code with psalm
                run: vendor/bin/psalm
# Uncomment these lines when added some migrations or table
#            -
#                name: Update Database Schema
#                run: php bin/console doctrine:migrations:migrate
#            -
#                name: Validate database schema
#                run: php bin/console doctrine:schema:validate
            -
                name: Execute tests (Unit and Feature tests) via PHPUnit
                run: vendor/bin/phpunit
            -
                name: Execute specification tests via PHPSpec
                run: vendor/bin/phpspec run
            -
                name: Create Behat logs dir
                run: |
                    mkdir -p var/behat
            -
                name: Execute behavior tests via behat
                run: vendor/bin/behat --colors --strict --no-interaction -f progress
            -
                name: Upload Behat logs
                uses: actions/upload-artifact@v2
                if: failure()
                with:
                    name: "Behat logs"
                    path: var/behat
                    if-no-files-found: ignore
